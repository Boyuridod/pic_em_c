CCS PCM C Compiler, Version 5.076, 56587               17-mai-24 11:20

               Filename:   D:\projetos_pic\Nova pasta\exemplo1\main.lst

               ROM used:   37 words (2%)
                           Largest free fragment is 2011
               RAM used:   7 (3%) at main() level
                           7 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <main.h> 
.................... #include <16F628A.h> 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
....................  
.................... #use delay(internal=4MHz) 
.................... #use FIXED_IO( A_outputs=PIN_A0 ) 
.................... #define LED	PIN_A0 
.................... #define BTN_LIGA	PIN_A1 
.................... #define BTN_DESLIGA	PIN_A2 
....................  
....................  
....................  
....................  
.................... int8 teste; 
....................  
.................... void main(){ 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    0E.3
0009:  MOVLW  07
000A:  BCF    03.5
000B:  MOVWF  1F
000C:  BCF    03.7
....................  
....................    output_low(LED); 
000D:  MOVLW  FE
000E:  BSF    03.5
000F:  MOVWF  05
0010:  BCF    03.5
0011:  BCF    05.0
....................  
....................    while(TRUE){ 
....................  
....................       if(input(BTN_LIGA) == 0){ 
0012:  MOVLW  FE
0013:  BSF    03.5
0014:  MOVWF  05
0015:  BCF    03.5
0016:  BTFSC  05.1
0017:  GOTO   01E
....................        
....................          output_high(LED); 
0018:  MOVLW  FE
0019:  BSF    03.5
001A:  MOVWF  05
001B:  BCF    03.5
001C:  BSF    05.0
....................        
....................       } 
001D:  GOTO   023
....................        
....................       else{ 
....................        
....................          output_low(LED); 
001E:  MOVLW  FE
001F:  BSF    03.5
0020:  MOVWF  05
0021:  BCF    03.5
0022:  BCF    05.0
....................        
....................       } 
0023:  GOTO   012
....................        
....................    } 
....................  
.................... } 
0024:  SLEEP

Configuration Fuses:
   Word  1: 3F70   NOWDT PUT INTRC_IO MCLR BROWNOUT NOLVP NOCPD NOPROTECT
