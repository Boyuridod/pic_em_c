#include <LCD_APRENDENDO.h>
#include <lcd_8bits.c>

int1 fim_1s = 0;
int8 contador = 250;

#INT_TIMER0
void  TIMER0_isr(void) 
{
   set_timer0(get_timer0() + 6);
   contador--;
   if(contador == 0){

      contador = 250;
      fim_1s = 1;

   }
}
 
#define _bootloader

// NOTE - User must include bootloader.h in application program
#include <bootloader.h>
#include <loader.c>

#define PUSH_BUTTON PIN_A5

#INT_GLOBAL
void isr(void){
   jump_to_isr(LOADER_END+5);
}

#org LOADER_END+1, LOADER_END+2
void application(void) {
  while(TRUE);
}

void main()
{
   setup_adc_ports(AN0_AN1_AN3);
   setup_adc(ADC_CLOCK_INTERNAL);
   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_16|RTCC_8_BIT);      //4,0 ms overflow
   
   enable_interrupts(INT_TIMER0);
   enable_interrupts(GLOBAL);
   
   lcd_init();
   
   lcd_gotoxy(6, 0);
//!   lcd_write_dat('I');
//!   lcd_write_dat('F');
//!   lcd_write_dat('T');
//!   lcd_write_dat('M');
   printf(lcd_write_dat,"IFTM");
 
   white(TRUE){
   
   }

}
